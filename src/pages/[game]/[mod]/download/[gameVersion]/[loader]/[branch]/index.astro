---
import { getEntry } from 'astro:content';
import { Image } from 'astro:assets';
import { Icon } from 'astro-icon';
import curseForgeLogo from '../../../../_curseforge.svg';
import modrinthLogo from '../../../../_modrinth.svg';
import Layout from '../../../../../../../layouts/Layout.astro';
import DownloadsFilter from '../../../../../../../components/DownloadsFilter.vue';
import listModFiles from '../../../../../../../utils/list-mod-files';
import NoteBox from '../../../../../../../components/NoteBox.astro';

export const prerender = false;

/*export async function getStaticPaths() {
    const branches = ['release', 'snapshot'];
    const modEntries = await getCollection('mods');
    return modEntries.flatMap((entry) =>
        entry.data.gameVersions.flatMap((gameVersion: string) =>
            entry.data.loaders.flatMap((loader: string) =>
                branches.flatMap((branch) => {
                    const parts = entry.slug.split('/');
                    return {
                        params: { game: parts[0], mod: parts[1], gameVersion, branch, loader: loader.toLowerCase() },
                        props: { entry, game: parts[0], gameVersion, loader, branch },
                    };
                })
            )
        )
    );
}*/

const { game, mod, gameVersion, loader, branch } = Astro.params;
const entry = await getEntry('mods', `${game}/${mod}`);
if (!entry) {
    return {
        status: 404,
        error: new Error(`Mod not found: ${game}/${mod}`),
    };
}

const humanizeFileSize = (bytes: number) => {
    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];
    if (bytes === 0) return '0 Byte';
    const i = Math.floor(Math.log(bytes) / Math.log(1024));
    return parseFloat((bytes / Math.pow(1024, i)).toFixed(2)) + ' ' + sizes[i];
};

const humanizeTimestamp = (timestamp?: string) => {
    if (!timestamp) {
        return 'Unknown';
    }

    const date = new Date(timestamp);
    return date.toLocaleString();
};

const humanizeVersion = (version?: string) => {
    return version?.split('+')[0];
};

const humanizeLoader = (loader?: string) => {
    if (!loader) {
        return 'Unknown';
    }

    if (loader === 'neoforge') {
        return 'NeoForge';
    }

    return loader.charAt(0).toUpperCase() + loader.slice(1);
};

const jars = await listModFiles(entry.data.modId, gameVersion!, loader!, branch!);
const latestJar = jars[0];

const title = 'Download ' + entry.data.title + ' for Minecraft ' + gameVersion + ' (' + humanizeLoader(loader) + ')';
const curseForgeUrl = entry.data.curseForgeSlug ? `https://www.curseforge.com/minecraft/mc-mods/${entry.data.curseForgeSlug}` : null;
const modrinthUrl = entry.data.modrinthSlug ? `https://modrinth.com/mod/${entry.data.modrinthSlug}` : null;

const previewVersion = '';
---

<Layout title={title} skipAds={true}>
    <h1 class="text-4xl text-center mb-4">
        {title}
        {branch === 'snapshot' && <span class="text-patreon"> (Patreon Preview)</span>}
    </h1>

    <div class="flex gap-6 justify-center mb-4">
        {
            game === 'mc' && entry.data.modId !== 'balm' && (
                <div class="w-1/3">
                    <NoteBox title="Required Dependency" className="h-full">
                        {entry.data.title} requires <strong>Balm</strong> to function.
                        <br />
                        Download and install it alongside this mod.
                        <div class="mt-2">
                            <a href={`/mc/balm/download/${gameVersion}/${loader}/${branch}`} target="_blank" class="btn btn-sm btn-primary">
                                Download Balm
                            </a>
                        </div>
                    </NoteBox>
                </div>
            )
        }

        {
            previewVersion && branch !== 'snapshot' && (
                <div class="w-1/3">
                    <NoteBox title={'Minecraft ' + previewVersion} color="patreon" className="h-full">
                        Preview versions of some mods are now available to Patreon supporters!
                        <div class="mt-2">
                            <a href="/sponsor" class="btn btn-sm btn-patreon">
                                Become a Patron
                            </a>{' '}
                            to get early access.
                        </div>
                    </NoteBox>
                </div>
            )
        }
    </div>

    <div class="flex items-end justify-center gap-4">
        <DownloadsFilter client:load entry={entry} game={game!} gameVersion={gameVersion!} loader={loader!} branch={branch!} previewVersion={previewVersion} />

        {
            latestJar && (
                <a href={'/download?v=' + encodeURIComponent(latestJar.downloadUrl)} class="btn btn-download">
                    <Icon name="mdi:download" class="w-6" />
                    <span>
                        <strong>Download</strong>
                        {humanizeVersion(latestJar.version)} for <strong>Minecraft {gameVersion}</strong>
                        <span>
                            (<strong>{humanizeLoader(loader)}</strong>)
                        </span>
                        <span>({humanizeFileSize(latestJar.fileSize)})</span>
                    </span>
                </a>
            )
        }
    </div>

    <div class="divider"></div>

    <table class="table mb-4">
        <thead>
            <tr>
                <th>Version</th>
                <th>Loader</th>
                <th>Game Version</th>
                <th>Released at</th>
                <th>File Size</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            {
                jars.map((jar, i) => (
                    <tr>
                        <td>
                            <div class="flex items-center gap-2">
                                {humanizeVersion(jar.version)}
                                {i === 0 && <span class="badge badge-success badge-sm">latest</span>}
                            </div>
                        </td>
                        <td>{humanizeLoader(loader)}</td>
                        <td>{gameVersion}</td>
                        <td>{humanizeTimestamp(jar.lastModified)}</td>
                        <td>{humanizeFileSize(jar.fileSize)}</td>
                        <td>
                            <a href={'/download?v=' + encodeURIComponent(jar.downloadUrl)} class="btn btn-square btn-sm btn-download">
                                <Icon name="mdi:download" className="w-5" />
                            </a>
                        </td>
                    </tr>
                ))
            }
            {
                !jars.length && (
                    <tr>
                        <td colspan="6" class="text-center text-lg text-base-content/80">
                            No files found.
                            { branch === 'snapshot' && loader !== 'fabric' && (
                                <span>Preview versions are usually available for Fabric only. <a href={`/${entry.slug}/download/${gameVersion}/fabric/snapshot`} class="link link-hover link-primary">(View Fabric versions)</a></span>
                            )}
                            { branch === 'snapshot' && loader === 'fabric' && (
                                <span>Check the Patreon channel on <a href="https://discord.gg/VAfZ2Nau6j" class="link link-hover link-discord">Discord</a> for updates on preview releases.</span>
                            )}
                        </td>
                    </tr>
                )
            }
        </tbody>
    </table>

    <div class="divider"></div>

    <p class="text-center text-lg opacity-80 mb-4">Looking for older versions?</p>

    <div class="flex justify-center items-center gap-4">
        {
            curseForgeUrl && (
                <a href={curseForgeUrl} class="btn btn-curseforge">
                    <Image src={curseForgeLogo} alt="" class="w-6" />
                    Downloads on CurseForge
                </a>
            )
        }
        {
            modrinthUrl && (
                <a href={modrinthUrl} class="btn btn-modrinth">
                    <Image src={modrinthLogo} alt="" class="w-6" />
                    Downloads on Modrinth
                </a>
            )
        }
    </div>

    <div class="divider"></div>

    <!--<div class="mb-4 flex justify-center">
        <a href="/sponsor"><img src="https://mods.twelveiterations.com/img/sponsor.png" alt="Support the Development for only $2 a month." /></a>
    </div>-->
</Layout>
